# We only run this pipeline when something gitlab-related in changed,
# no need to execute it on every run, because basic testing is covered
# by Github Actions.
workflow:
  rules:
    - if: '$CI_PIPELINE_SOURCE'
      when: always
      changes:
        - .gitlab-ci.yml
        - '{{cookiecutter.project_name}}/.gitlab-ci.yml'
        - tests/build.sh
        - tests/test_gitlab.sh


# Reusing existing gitlab definition:
include:
  - local: '{{cookiecutter.project_name}}/.gitlab-ci.yml'


# Building template project:
mirror-github-build:
  stage: build
  image: "python:3.8"
  variables:
    PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  cache:  # we use cache to speed up `pip` installs
    key:
      files:
        - poetry.lock
    paths:
      - "$PIP_CACHE_DIR"
      - '.venv/'
  before_script:
    # Installing poetry:
    - curl -sSL "https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py" | python
    - export PATH="$HOME/.poetry/bin:$PATH"
    # Installing dependencies:
    - poetry config virtualenvs.in-project true
    - poetry install --no-dev
  script:
    - poetry run sh tests/test_gitlab.sh
  only:
    - master
    - external_pull_requests
  artifacts:
    name: "template-build"
    expire_in: 1 week
    paths:
      - '.test/wemake-django-template'


# Redefining how tests are executed:
variables:
  GROUP_NAME: 'sobolevn'
  PROJECT_NAME: 'wemake-django-template'


test:
  variables:
    CI_PROJECT_DIR: '.test/wemake-django-template'
  only:
    - master
    - external_pull_requests


release-image:
  variables:
    CI_PROJECT_DIR: '.test/wemake-django-template'
  only:
    - master
    - external_pull_requests
