---

# This compose-file is production only. So, it should not be called directly.
#
# Instead, it should be a part of your deploy strategy.
# This setup is supposed to be used with `docker-swarm`.
# See `./docs/_pages/template/production.rst` docs.

version: "3.6"
services:
  caddy:
    image: "wemakeservices/caddy-docker:0.10.11-1"
    restart: unless-stopped
    env_file: ./config/.env
    volumes:
      - ./docker/caddy/certs:/root/.caddy  # saving certificates
      - ./docker/caddy/Caddyfile:/etc/Caddyfile:ro  # configuration
      - django-static:/var/www/django/static:ro  # serving django's statics
      - django-media:/var/www/django/media:ro  # serving django's media
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - web
    networks:
      - webnet

  web:
    <<: &web
      image:
        "registry.gitlab.com/{{ cookiecutter.organization }}
        /{{ cookiecutter.project_name }}:latest"
      build:
        context: .
        dockerfile: ./docker/django/Dockerfile
        args:
          DJANGO_ENV: production
      restart: unless-stopped
      volumes:
        - django-media:/var/www/django/media  # since in dev it is app's folder
    command: sh ./docker/django/gunicorn.sh
    expose:
      - 8000
    deploy:
      replicas: 5
      resources:
        limits:
          cpus: "0.15"
          memory: 200M
      restart_policy:
        condition: on-failure

# This task is an example of how to extend existing ones:
# some_wroker:
#   <<: *web
#   command: python manage.py worker_process
#   deploy:
#     replicas: 2
