name: test

on:
  push:
    branches:
      - master
  pull_request:
  workflow_dispatch:

concurrency:
  group: test-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      matrix:
        python-version: [3.9]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install poetry
      env:  # Keep in sync with `POETRY_VERSION` in `Dockerfile`
        POETRY_VERSION: "1.1.13"
      run: |
        curl -sSL "https://install.python-poetry.org" | python -

        # Adding `poetry` to `$PATH`:
        echo "$HOME/.local/bin" >> $GITHUB_PATH

    - name: Set up cache
      uses: actions/cache@v3
      with:
        path: .venv
        key: venv-${{ matrix.python-version }}-${{ hashFiles('poetry.lock') }}
    - name: Install dependencies
      run: |
        poetry config virtualenvs.in-project true
        poetry install

        poetry run pip install -U pip

    - name: Run checks
      run: |
        poetry run flake8 .
        poetry run pytest
        poetry run bash tests/test_github.sh
        poetry run poetry check
        poetry run pip check
        poetry run safety check --full-report
